<launch>
    <node name="dynamixel_manager"
	pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
    <rosparam>
      namespace: dynamixel_controller_manager
      serial_ports:
        pan_tilt:
          port_name: "/dev/ttyUSB0"
          baud_rate: 1000000
          min_motor_id: 1
          max_motor_id: 3
          update_rate: 10
    </rosparam>
  </node>

  <rosparam>
    pan_controller:
      controller:
        package: dynamixel_controllers
        module: joint_position_controller
        type: JointPositionController
      joint_name: pan_joint
      joint_speed: 1.17
      motor:
        id: 1
        init: 512
        min: 0
        max: 1023
    tilt_controller:
      controller:
        package: dynamixel_controllers
        module: joint_position_controller
        type: JointPositionController
      joint_name: tilt_joint
      joint_speed: 1.17
      motor:
        id: 2
        init: 512
        min: 0
        max: 1023
  </rosparam>
    
  <node name="pan_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
	args="--manager=dynamixel_controller_manager
	      --port=pan_tilt
	      pan_controller"
	output="screen"/>

  <node name="tilt_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
	args="--manager=dynamixel_controller_manager
	      --port=pan_tilt
	      tilt_controller"
	output="screen"/>

  <param name="robot_description" command="$(find xacro)/xacro --inorder '/urdf/pan_tilt.urdf.xacro'"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <rosparam>
    dynamixel_controllers:
      - pan_controller
      - tilt_controller
  </rosparam>
  <node name="joint_state_publisher" pkg="robot_state_publisher" type="dynamixel_joint_state_publisher.py"/>

</launch>
